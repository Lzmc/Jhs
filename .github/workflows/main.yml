name: RDPg
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Download
        run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
      - name: Extract
        run: Expand-Archive ngrok.zip
      - name: Auth
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
      - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
      - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Sakmerl57" -Force)
      - name: Create Tunnel
        run: .\ngrok\ngrok.exe tcp 3389
      - name: Get Public IP
        id: public-ip
        run: |
          $ip = & curl -s https://api.ipify.org
          echo "Public IP: $ip"
      - name: Keep Alive
        run: |
          $timeout = (Get-Date).AddHours(24)
          while ((Get-Date) -lt $timeout) {
            Start-Sleep -Seconds 600  # Sleep for 10 minutes
          }
